capture
		   commande:"tshark -i [interface] -w [filename] -F [format]"

			 interface:"-i [Interface]",le nom ou le n° de l'interface (selon la liste des interfaces)."tshark -D" ,pour obtenir la liste des interfaces dispo.

			 filename: Si capturé en root ,  le fichier doit être save sous /root/ . [Linux]

			 format:"tshark -F [format]", pour obtenir la liste des formats dispo , pcapgng par défaut.

			 filtres:"-f "[filtre][value]" ",host , dst , src , net... pour mettre plusieurs filtres , les joindres avec le mot clé and dans les "" exemple : -f "host $local and dst $broadcast".

			 restriction_nb_pacquets:"-c [Int]" , arrête d'enregistrer à [Int] paquets.

			 restriction_nb_secondes:"-a duration:[Int]" , arrête d'enregistrer au bout de [Int] secondes.

			 restriction_nb_octets:"-a filesize:[Int]" , arrête d'enregistrer quand le fichier dépasse [Int] KB de volume.

			 restriction_nb_fichiers:"-a files:[Int]" , arrête d'enregistrer quand l'enregistrement a généré [Int] fichiers.

			 exemple:"sudo tshark -i any -w /root/wiresentry.pcap -F pcap -a duration:10" [Linux]
			 				 "[en admin] .\tshark.exe -i $any_windows -w file.pcap -F pcap -a duration:10" [Windows]
							  		"-i any" existe pas sous windows il faut donc définir $any_windows au préalable avec

							 [Powershell]:
							.\tshark.exe -D | Measure-Object -line > txt.file
			 			  $nb_interface = (Get-Content txt.file -TotalCount 4)[-1]
			 			  $nb_interface = [int]$nb_interface
			 			  rm txt.file

			 			  $any_windows = @(1..$nb_interface)
			 			  for ($xor = 1 ; $xor -lt (($nb_interface)+1) ; $xor++)
			 			  {
			 			    $any_windows[ ($xor-1) ] = "-i $xor"
			 			  }
							##ce qui revient à faire : -i 1 -i 2 -i 3 ... -i $nb_interface.

lecture
		   commande:"tshark -r [filename] -T [format] [filtres]"

			 filename:"si l'enregistrement a été fait en root , le fichier doit être dans /root/ .

			 format:"psml|ps|psml|json|jsonraw|ek|tabs|text|fields" supportés , redirige la sortie dans un fichier au format défini.

			 filtres:"ip.src== , ip.dst== , tcp.port== " ou autres filtres d'affichage de wireshark.

			 filtre_protocole:"-O [protocole1],[protocole2]..." , ne conserve que les pacquets des protocoles cités.

			 multiple_filtre:"-Y "(filtre1)&&(filtre2)&&...)".

			 exemple:"sudo tshark -r /root/wiresentry.pcap tcp.port==80 -T json > trame.json" [Linux]
			 				 "[En admin] .\tshark.exe -r file.pcap tcp.port==80 -T json > trame.json" [Windows]

------------------------------------------------------------------------------
